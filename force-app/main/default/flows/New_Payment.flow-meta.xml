<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Jump_to_payment</name>
        <label>Jump to payment</label>
        <locationX>1224</locationX>
        <locationY>301</locationY>
        <actionName>c:FlowRedirect</actionName>
        <actionType>component</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>recordId</name>
            <value>
                <elementReference>newPaymentId</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <apiVersion>49.0</apiVersion>
    <assignments>
        <name>incrementTotalPaid</name>
        <label>incrementTotalPaid</label>
        <locationX>310</locationX>
        <locationY>513</locationY>
        <assignmentItems>
            <assignToReference>totalPaid</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>paymentsLoop.Amount_paid__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>paymentsLoop</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>hasErrorTest</name>
        <label>hasErrorTest</label>
        <locationX>500</locationX>
        <locationY>299</locationY>
        <defaultConnector>
            <targetReference>enterFields</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>hasError</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>errorMessage</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>errorAlertScreen</targetReference>
            </connector>
            <label>hasError</label>
        </rules>
    </decisions>
    <decisions>
        <name>newPaymentFailTest</name>
        <label>newPaymentFailTest</label>
        <locationX>995</locationX>
        <locationY>302</locationY>
        <defaultConnector>
            <targetReference>Jump_to_payment</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>newPaymentFail</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>newPaymentId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>newPaymentFailScreen</targetReference>
            </connector>
            <label>newPaymentFail</label>
        </rules>
    </decisions>
    <formulas>
        <name>errorMessage</name>
        <dataType>String</dataType>
        <expression>IF({!getPaymentMethod.Proposal__r.Current_payment_method__c} != {!getPaymentMethod.Id},
 &quot;ERROR: This payment method is not the current payment method.  Please create the new payment from the current payment method, after ensuring that it is verified.&quot;,
IF(ISBLANK({!getPaymentMethod.Date_ready_for_payment__c}),
 &quot;ERROR: Payment method is not yet ready to be paid.&quot;,
IF(NOT({!getPaymentMethod.Amount_to_pay__c} &gt; 0),
 &quot;ERROR: Payment method must have &apos;Amount to pay&apos; greater than 0.&quot;,
IF({!totalPaid} &gt;= {!getPaymentMethod.Amount_to_pay__c},
 &quot;ERROR: The payment method has already been paid down, that is the total paid (&quot; &amp;
 TEXT({!totalPaid}) &amp; &quot;) is &gt;= the payment method&apos;s &apos;Amount to pay&apos; (&quot; &amp;
 TEXT({!getPaymentMethod.Amount_to_pay__c}) &amp;
 &quot;).&quot;,
IF({!getPaymentMethod.Proposal__r.To_be_paid__c} &lt; {!getPaymentMethod.Amount_to_pay__c},
 &quot;ERROR: The payment method&apos;s &apos;Amount to pay&apos; (&quot; &amp;
 TEXT({!getPaymentMethod.Amount_to_pay__c}) &amp;
 &quot;) exceeds the remaining amount to be paid on this grant (&quot; &amp;
 TEXT({!getPaymentMethod.Proposal__r.To_be_paid__c}) &amp;
 &quot;).&quot;,
null)))))</expression>
    </formulas>
    <formulas>
        <name>frmCurrentPaymentMilestoneId</name>
        <dataType>String</dataType>
        <expression>IF(NOT(ISBLANK({!getPaymentMethod.Proposal__r.Current_payment_milestone__c})),
 {!getPaymentMethod.Proposal__r.Current_payment_milestone__r.Id}, 
 null
)</expression>
    </formulas>
    <formulas>
        <name>paymentMethodAmtRemaining</name>
        <dataType>Number</dataType>
        <expression>{!getPaymentMethod.Amount_to_pay__c} - {!totalPaid}</expression>
        <scale>2</scale>
    </formulas>
    <interviewLabel>New Payment {!$Flow.CurrentDateTime}</interviewLabel>
    <label>New Payment</label>
    <loops>
        <name>paymentsLoop</name>
        <label>paymentsLoop</label>
        <locationX>310</locationX>
        <locationY>304</locationY>
        <collectionReference>getPayments</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>incrementTotalPaid</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>hasErrorTest</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordCreates>
        <name>createPayment</name>
        <label>createPayment</label>
        <locationX>846</locationX>
        <locationY>300</locationY>
        <assignRecordIdToReference>newPaymentId</assignRecordIdToReference>
        <connector>
            <targetReference>newPaymentFailTest</targetReference>
        </connector>
        <inputAssignments>
            <field>Amount_paid__c</field>
            <value>
                <elementReference>Amount_Paid</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Date_paid__c</field>
            <value>
                <elementReference>datePaid</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Date_paid_accounting__c</field>
            <value>
                <elementReference>datePaid</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Milestone__c</field>
            <value>
                <elementReference>frmCurrentPaymentMilestoneId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Payment_Method__c</field>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Payment_ref__c</field>
            <value>
                <elementReference>Payment_ref</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Proposal__c</field>
            <value>
                <elementReference>getPaymentMethod.Proposal__c</elementReference>
            </value>
        </inputAssignments>
        <object>Payment__c</object>
    </recordCreates>
    <recordLookups>
        <name>getPaymentMethod</name>
        <label>getPaymentMethod</label>
        <locationX>176</locationX>
        <locationY>179</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>getPayments</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Payment_Method__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getPayments</name>
        <label>getPayments</label>
        <locationX>176</locationX>
        <locationY>304</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>paymentsLoop</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Payment_Method__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Payment__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <screens>
        <name>enterFields</name>
        <label>enterFields</label>
        <locationX>697</locationX>
        <locationY>300</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>createPayment</targetReference>
        </connector>
        <fields>
            <name>datePaid</name>
            <dataType>Date</dataType>
            <fieldText>Date Paid</fieldText>
            <fieldType>InputField</fieldType>
            <helpText>&lt;p&gt;Please enter the date on which this payment was made.&lt;/p&gt;</helpText>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>Amount_Paid</name>
            <dataType>Number</dataType>
            <defaultValue>
                <elementReference>paymentMethodAmtRemaining</elementReference>
            </defaultValue>
            <fieldText>Amount Paid</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <scale>2</scale>
            <validationRule>
                <errorMessage>&lt;p&gt;Amount paid must be greater than zero and no&lt;span style=&quot;background-color: var(--lwc-colorBackgroundInput,rgb(255, 255, 255)); color: var(--lwc-colorTextWeak,rgb(62, 62, 60)); font-size: var(--lwc-fontSize3,0.8125rem); font-family: var(--lwc-fontFamily,&amp;quot;Salesforce Sans&amp;quot;, Arial, sans-serif);&quot;&gt; greater than the amount left to pay on the payment method ({!paymentMethodAmtRemaining}).&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>AND(
 {!Amount_Paid} &gt; 0,
 {!Amount_Paid} &lt;= {!paymentMethodAmtRemaining}
)</formulaExpression>
            </validationRule>
        </fields>
        <fields>
            <name>Payment_ref</name>
            <dataType>String</dataType>
            <fieldText>Payment ref</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>errorAlertScreen</name>
        <label>errorAlertScreen</label>
        <locationX>506</locationX>
        <locationY>545</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>errorMessageDisplay</name>
            <fieldText>&lt;p&gt;{!errorMessage}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>newPaymentFailScreen</name>
        <label>newPaymentFailScreen</label>
        <locationX>1002</locationX>
        <locationY>542</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>newPaymentFailMessage</name>
            <fieldText>&lt;p&gt;&quot;Error: Unable to create the new payment record&quot;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <start>
        <locationX>50</locationX>
        <locationY>50</locationY>
        <connector>
            <targetReference>getPaymentMethod</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <name>newPaymentId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>totalPaid</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
</Flow>
